# Generated by Django 5.2.6 on 2025-09-27 14:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=50)),
                ('request_timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('response_data', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['endpoint', 'request_timestamp'], name='idx_api_request_endpoint_time')],
            },
        ),
        migrations.CreateModel(
            name='GeoidElevationInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_id', models.CharField(max_length=50)),
                ('datum', models.CharField(default='geoid', max_length=20)),
                ('se', models.CharField(default='CDEM', max_length=10)),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
        ),
        migrations.CreateModel(
            name='LULCAOIStatisticsInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geometry_wkt', models.TextField()),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
        ),
        migrations.CreateModel(
            name='LULCPolygonStatisticsInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates_list', models.JSONField()),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
        ),
        migrations.CreateModel(
            name='VillageGeocodingInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('village_name', models.CharField(max_length=100)),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
        ),
        migrations.CreateModel(
            name='LULCBoundingBoxStatisticsInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_lng', models.FloatField()),
                ('min_lat', models.FloatField()),
                ('max_lng', models.FloatField()),
                ('max_lat', models.FloatField()),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
            options={
                'constraints': [
                    models.CheckConstraint(
                        check=(
                            models.Q(min_lat__lte=models.F('max_lat')) &
                            models.Q(min_lng__lte=models.F('max_lng')) &
                            models.Q(min_lat__gte=-90) &
                            models.Q(max_lat__lte=90) &
                            models.Q(min_lng__gte=-180) &
                            models.Q(max_lng__lte=180)
                        ),
                        name='chk_bounding_box'
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name='PostalHospitalProximityInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('theme', models.CharField(default='all', max_length=20)),
                ('buffer', models.IntegerField(default=3000)),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
            options={
                'indexes': [models.Index(fields=['lat', 'lng'], name='idx_proximity_coords')],
            },
        ),
        migrations.CreateModel(
            name='RoutingInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_lat', models.FloatField()),
                ('start_lng', models.FloatField()),
                ('end_lat', models.FloatField()),
                ('end_lng', models.FloatField()),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
            options={
                'indexes': [models.Index(fields=['start_lat', 'start_lng', 'end_lat', 'end_lng'], name='idx_routing_coords')],
            },
        ),
        migrations.CreateModel(
            name='ThematicStatisticsInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('distcode', models.CharField(max_length=10)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
            options={
                'indexes': [models.Index(fields=['lat', 'lng'], name='idx_thematic_stats_coords')],
            },
        ),
        migrations.CreateModel(
            name='VillageReverseGeocodingInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apirequest')),
            ],
            options={
                'indexes': [models.Index(fields=['lat', 'lng'], name='idx_reverse_geocoding_coords')],
            },
        ),
    ]
